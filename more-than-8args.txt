void rte_mempool_trace_create(const char  * name, uint32_t nb_elts, uint32_t elt_size, uint32_t cache_size, uint32_t private_data_size, void * mp_init, void * mp_init_arg, void * obj_init, void * obj_init_arg, uint32_t flags, struct rte_mempool * mempool);
struct rte_mempool * rte_mempool_create(const char  * name, unsigned int n, unsigned int elt_size, unsigned int cache_size, unsigned int private_data_size, rte_mempool_ctor_t * mp_init, void * mp_init_arg, rte_mempool_obj_cb_t * obj_init, ...);
void rte_mempool_trace_create(const char  * name, uint32_t nb_elts, uint32_t elt_size, uint32_t cache_size, uint32_t private_data_size, void * mp_init, void * mp_init_arg, void * obj_init, void * obj_init_arg, uint32_t flags, struct rte_mempool * mempool);
struct malloc_elem * alloc_pages_on_heap(struct malloc_heap * heap, uint64_t pg_sz, size_t elt_size, int socket, unsigned int flags, size_t align, size_t bound, _Bool contig, struct rte_memseg * * ms, int n_segs);
int spdk_dif_ctx_init(struct spdk_dif_ctx * ctx, uint32_t block_size, uint32_t md_size, _Bool md_interleave, _Bool dif_loc, enum spdk_dif_type dif_type, uint32_t dif_flags, uint32_t init_ref_tag, uint16_t apptag_mask, uint16_t app_tag, uint32_t data_offset, uint16_t guard_seed);
int spdk_accel_append_decrypt(struct spdk_accel_sequence * * pseq, struct spdk_io_channel * ch, struct spdk_accel_crypto_key * key, struct iovec * dst_iovs, uint32_t dst_iovcnt, struct spdk_memory_domain * dst_domain, void * dst_domain_ctx, struct iovec * src_iovs, uint32_t src_iovcnt, struct spdk_memory_domain * src_domain, void * src_domain_ctx, uint64_t iv, uint32_t block_size, int flags, spdk_accel_step_cb cb_fn, void * cb_arg);
int spdk_accel_append_encrypt(struct spdk_accel_sequence * * pseq, struct spdk_io_channel * ch, struct spdk_accel_crypto_key * key, struct iovec * dst_iovs, uint32_t dst_iovcnt, struct spdk_memory_domain * dst_domain, void * dst_domain_ctx, struct iovec * src_iovs, uint32_t src_iovcnt, struct spdk_memory_domain * src_domain, void * src_domain_ctx, uint64_t iv, uint32_t block_size, int flags, spdk_accel_step_cb cb_fn, void * cb_arg);
int spdk_accel_append_decompress(struct spdk_accel_sequence * * pseq, struct spdk_io_channel * ch, struct iovec * dst_iovs, size_t dst_iovcnt, struct spdk_memory_domain * dst_domain, void * dst_domain_ctx, struct iovec * src_iovs, size_t src_iovcnt, struct spdk_memory_domain * src_domain, void * src_domain_ctx, int flags, spdk_accel_step_cb cb_fn, void * cb_arg);
int spdk_accel_append_fill(struct spdk_accel_sequence * * pseq, struct spdk_io_channel * ch, void * buf, uint64_t len, struct spdk_memory_domain * domain, void * domain_ctx, uint8_t pattern, int flags, spdk_accel_step_cb cb_fn, void * cb_arg);
int spdk_accel_append_copy(struct spdk_accel_sequence * * pseq, struct spdk_io_channel * ch, struct iovec * dst_iovs, uint32_t dst_iovcnt, struct spdk_memory_domain * dst_domain, void * dst_domain_ctx, struct iovec * src_iovs, uint32_t src_iovcnt, struct spdk_memory_domain * src_domain, void * src_domain_ctx, int flags, spdk_accel_step_cb cb_fn, void * cb_arg);
int spdk_accel_submit_decrypt(struct spdk_io_channel * ch, struct spdk_accel_crypto_key * key, struct iovec * dst_iovs, uint32_t dst_iovcnt, struct iovec * src_iovs, uint32_t src_iovcnt, uint64_t iv, uint32_t block_size, int flags, spdk_accel_completion_cb cb_fn, void * cb_arg);
int spdk_accel_submit_encrypt(struct spdk_io_channel * ch, struct spdk_accel_crypto_key * key, struct iovec * dst_iovs, uint32_t dst_iovcnt, struct iovec * src_iovs, uint32_t src_iovcnt, uint64_t iv, uint32_t block_size, int flags, spdk_accel_completion_cb cb_fn, void * cb_arg);
int spdk_accel_submit_decompress(struct spdk_io_channel * ch, struct iovec * dst_iovs, size_t dst_iovcnt, struct iovec * src_iovs, size_t src_iovcnt, uint32_t * output_size, int flags, spdk_accel_completion_cb cb_fn, void * cb_arg);
int spdk_accel_submit_compress(struct spdk_io_channel * ch, void * dst, uint64_t nbytes, struct iovec * src_iovs, size_t src_iovcnt, uint32_t * output_size, int flags, spdk_accel_completion_cb cb_fn, void * cb_arg);
int spdk_accel_submit_copy_crc32cv(struct spdk_io_channel * ch, void * dst, struct iovec * src_iovs, uint32_t iov_cnt, uint32_t * crc_dst, uint32_t seed, int flags, spdk_accel_completion_cb cb_fn, void * cb_arg);
int spdk_accel_submit_copy_crc32c(struct spdk_io_channel * ch, void * dst, void * src, uint32_t * crc_dst, uint32_t seed, uint64_t nbytes, int flags, spdk_accel_completion_cb cb_fn, void * cb_arg);
int spdk_bdev_part_base_construct_ext(const char  * bdev_name, spdk_bdev_remove_cb_t remove_cb, struct spdk_bdev_module * module, struct spdk_bdev_fn_table * fn_table, struct bdev_part_tailq * tailq, spdk_bdev_part_base_free_fn free_fn, void * ctx, uint32_t channel_size, ...);
int spdk_bdev_zone_appendv_with_md(struct spdk_bdev_desc * desc, struct spdk_io_channel * ch, struct iovec * iov, int iovcnt, void * md_buf, uint64_t zone_id, uint64_t num_blocks, spdk_bdev_io_completion_cb cb, void * cb_arg);
int spdk_bdev_nvme_io_passthru_md(struct spdk_bdev_desc * desc, struct spdk_io_channel * ch, const struct spdk_nvme_cmd  * cmd, void * buf, size_t nbytes, void * md_buf, size_t md_len, spdk_bdev_io_completion_cb cb, void * cb_arg);
int spdk_bdev_zcopy_start(struct spdk_bdev_desc * desc, struct spdk_io_channel * ch, struct iovec * iov, int iovcnt, uint64_t offset_blocks, uint64_t num_blocks, _Bool populate, spdk_bdev_io_completion_cb cb, void * cb_arg);
int spdk_bdev_comparev_and_writev_blocks(struct spdk_bdev_desc * desc, struct spdk_io_channel * ch, struct iovec * compare_iov, int compare_iovcnt, struct iovec * write_iov, int write_iovcnt, uint64_t offset_blocks, uint64_t num_blocks, spdk_bdev_io_completion_cb cb, void * cb_arg);
int spdk_bdev_comparev_blocks_with_md(struct spdk_bdev_desc * desc, struct spdk_io_channel * ch, struct iovec * iov, int iovcnt, void * md_buf, uint64_t offset_blocks, uint64_t num_blocks, spdk_bdev_io_completion_cb cb, void * cb_arg);
int bdev_comparev_blocks_with_md(struct spdk_bdev_desc * desc, struct spdk_io_channel * ch, struct iovec * iov, int iovcnt, void * md_buf, uint64_t offset_blocks, uint64_t num_blocks, spdk_bdev_io_completion_cb cb, void * cb_arg);
int spdk_bdev_writev_blocks_ext(struct spdk_bdev_desc * desc, struct spdk_io_channel * ch, struct iovec * iov, int iovcnt, uint64_t offset_blocks, uint64_t num_blocks, spdk_bdev_io_completion_cb cb, void * cb_arg, struct spdk_bdev_ext_io_opts * opts);
int spdk_bdev_writev_blocks_with_md(struct spdk_bdev_desc * desc, struct spdk_io_channel * ch, struct iovec * iov, int iovcnt, void * md_buf, uint64_t offset_blocks, uint64_t num_blocks, spdk_bdev_io_completion_cb cb, void * cb_arg);
int bdev_writev_blocks_with_md(struct spdk_bdev_desc * desc, struct spdk_io_channel * ch, struct iovec * iov, int iovcnt, void * md_buf, uint64_t offset_blocks, uint64_t num_blocks, spdk_bdev_io_completion_cb cb, void * cb_arg, struct spdk_bdev_ext_io_opts * opts, _Bool copy_opts);
int spdk_bdev_readv_blocks_ext(struct spdk_bdev_desc * desc, struct spdk_io_channel * ch, struct iovec * iov, int iovcnt, uint64_t offset_blocks, uint64_t num_blocks, spdk_bdev_io_completion_cb cb, void * cb_arg, struct spdk_bdev_ext_io_opts * opts);
int spdk_bdev_readv_blocks_with_md(struct spdk_bdev_desc * desc, struct spdk_io_channel * ch, struct iovec * iov, int iovcnt, void * md_buf, uint64_t offset_blocks, uint64_t num_blocks, spdk_bdev_io_completion_cb cb, void * cb_arg);
int bdev_readv_blocks_with_md(struct spdk_bdev_desc * desc, struct spdk_io_channel * ch, struct iovec * iov, int iovcnt, void * md_buf, uint64_t offset_blocks, uint64_t num_blocks, spdk_bdev_io_completion_cb cb, void * cb_arg, struct spdk_bdev_ext_io_opts * opts, _Bool copy_opts);
int spdk_nvme_zns_ext_report_zones(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, void * payload, uint32_t payload_size, uint64_t slba, enum spdk_nvme_zns_zra_report_opts report_opts, _Bool partial_report, spdk_nvme_cmd_cb cb_fn, void * cb_arg);
int nvme_zns_zone_mgmt_recv(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, void * payload, uint32_t payload_size, uint64_t slba, uint8_t zone_recv_action, uint8_t zra_spec_field, _Bool zra_spec_feats, spdk_nvme_cmd_cb cb_fn, void * cb_arg);
int spdk_nvme_zns_report_zones(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, void * payload, uint32_t payload_size, uint64_t slba, enum spdk_nvme_zns_zra_report_opts report_opts, _Bool partial_report, spdk_nvme_cmd_cb cb_fn, void * cb_arg);
int spdk_nvme_zns_zone_appendv_with_md(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, uint64_t zslba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t io_flags, spdk_nvme_req_reset_sgl_cb reset_sgl_fn, spdk_nvme_req_next_sge_cb next_sge_fn, void * metadata, uint16_t apptag_mask, uint16_t apptag);
int spdk_nvme_zns_zone_appendv(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, uint64_t zslba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t io_flags, spdk_nvme_req_reset_sgl_cb reset_sgl_fn, spdk_nvme_req_next_sge_cb next_sge_fn);
int spdk_nvme_zns_zone_append_with_md(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, void * buffer, void * metadata, uint64_t zslba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t io_flags, uint16_t apptag_mask, uint16_t apptag);
int spdk_nvme_ocssd_ns_cmd_vector_read_with_md(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, void * buffer, void * metadata, uint64_t * lba_list, uint32_t num_lbas, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t io_flags);
int _nvme_ocssd_ns_cmd_vector_rw_with_md(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, void * buffer, void * metadata, uint64_t * lba_list, uint32_t num_lbas, spdk_nvme_cmd_cb cb_fn, void * cb_arg, enum spdk_ocssd_io_opcode opc, uint32_t io_flags);
int spdk_nvme_ocssd_ns_cmd_vector_write_with_md(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, void * buffer, void * metadata, uint64_t * lba_list, uint32_t num_lbas, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t io_flags);
struct nvme_request * _nvme_add_child_request(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, const struct nvme_payload  * payload, uint32_t payload_offset, uint32_t md_offset, uint64_t lba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t opc, uint32_t io_flags, uint16_t apptag_mask, uint16_t apptag, struct nvme_request * parent, _Bool check_sgl, int * rc);
struct nvme_request * _nvme_ns_cmd_split_request_prp(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, const struct nvme_payload  * payload, uint32_t payload_offset, uint32_t md_offset, uint64_t lba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t opc, uint32_t io_flags, struct nvme_request * req, uint16_t apptag_mask, uint16_t apptag, int * rc);
struct nvme_request * _nvme_ns_cmd_split_request_sgl(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, const struct nvme_payload  * payload, uint32_t payload_offset, uint32_t md_offset, uint64_t lba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t opc, uint32_t io_flags, struct nvme_request * req, uint16_t apptag_mask, uint16_t apptag, int * rc);
struct nvme_request * _nvme_ns_cmd_split_request(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, const struct nvme_payload  * payload, uint32_t payload_offset, uint32_t md_offset, uint64_t lba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t opc, uint32_t io_flags, struct nvme_request * req, uint32_t sectors_per_max_io, uint32_t sector_mask, uint16_t apptag_mask, uint16_t apptag, int * rc);
int spdk_nvme_ns_cmd_writev_ext(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, uint64_t lba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, spdk_nvme_req_reset_sgl_cb reset_sgl_fn, spdk_nvme_req_next_sge_cb next_sge_fn, struct spdk_nvme_ns_cmd_ext_io_opts * opts);
int spdk_nvme_ns_cmd_writev_with_md(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, uint64_t lba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t io_flags, spdk_nvme_req_reset_sgl_cb reset_sgl_fn, spdk_nvme_req_next_sge_cb next_sge_fn, void * metadata, uint16_t apptag_mask, uint16_t apptag);
int spdk_nvme_ns_cmd_writev(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, uint64_t lba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t io_flags, spdk_nvme_req_reset_sgl_cb reset_sgl_fn, spdk_nvme_req_next_sge_cb next_sge_fn);
int spdk_nvme_ns_cmd_write_with_md(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, void * buffer, void * metadata, uint64_t lba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t io_flags, uint16_t apptag_mask, uint16_t apptag);
int nvme_ns_cmd_zone_appendv_with_md(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, uint64_t zslba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t io_flags, spdk_nvme_req_reset_sgl_cb reset_sgl_fn, spdk_nvme_req_next_sge_cb next_sge_fn, void * metadata, uint16_t apptag_mask, uint16_t apptag);
int nvme_ns_cmd_zone_append_with_md(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, void * buffer, void * metadata, uint64_t zslba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t io_flags, uint16_t apptag_mask, uint16_t apptag);
int spdk_nvme_ns_cmd_readv_ext(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, uint64_t lba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, spdk_nvme_req_reset_sgl_cb reset_sgl_fn, spdk_nvme_req_next_sge_cb next_sge_fn, struct spdk_nvme_ns_cmd_ext_io_opts * opts);
int spdk_nvme_ns_cmd_readv_with_md(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, uint64_t lba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t io_flags, spdk_nvme_req_reset_sgl_cb reset_sgl_fn, spdk_nvme_req_next_sge_cb next_sge_fn, void * metadata, uint16_t apptag_mask, uint16_t apptag);
int spdk_nvme_ns_cmd_readv(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, uint64_t lba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t io_flags, spdk_nvme_req_reset_sgl_cb reset_sgl_fn, spdk_nvme_req_next_sge_cb next_sge_fn);
int spdk_nvme_ns_cmd_read_with_md(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, void * buffer, void * metadata, uint64_t lba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t io_flags, uint16_t apptag_mask, uint16_t apptag);
int spdk_nvme_ns_cmd_comparev_with_md(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, uint64_t lba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t io_flags, spdk_nvme_req_reset_sgl_cb reset_sgl_fn, spdk_nvme_req_next_sge_cb next_sge_fn, void * metadata, uint16_t apptag_mask, uint16_t apptag);
int spdk_nvme_ns_cmd_comparev(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, uint64_t lba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t io_flags, spdk_nvme_req_reset_sgl_cb reset_sgl_fn, spdk_nvme_req_next_sge_cb next_sge_fn);
int spdk_nvme_ns_cmd_compare_with_md(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, void * buffer, void * metadata, uint64_t lba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t io_flags, uint16_t apptag_mask, uint16_t apptag);
struct nvme_request * _nvme_ns_cmd_rw(struct spdk_nvme_ns * ns, struct spdk_nvme_qpair * qpair, const struct nvme_payload  * payload, uint32_t payload_offset, uint32_t md_offset, uint64_t lba, uint32_t lba_count, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t opc, uint32_t io_flags, uint16_t apptag_mask, uint16_t apptag, _Bool check_sgl, int * rc);
int spdk_nvme_ctrlr_cmd_directive_receive(struct spdk_nvme_ctrlr * ctrlr, uint32_t nsid, uint32_t doper, uint32_t dtype, uint32_t dspec, void * payload, uint32_t payload_size, uint32_t cdw12, uint32_t cdw13, spdk_nvme_cmd_cb cb_fn, void * cb_arg);
int nvme_ctrlr_cmd_directive(struct spdk_nvme_ctrlr * ctrlr, uint32_t nsid, uint32_t doper, uint32_t dtype, uint32_t dspec, void * payload, uint32_t payload_size, uint32_t cdw12, uint32_t cdw13, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint16_t opc_type, _Bool host_to_ctrlr);
int spdk_nvme_ctrlr_cmd_directive_send(struct spdk_nvme_ctrlr * ctrlr, uint32_t nsid, uint32_t doper, uint32_t dtype, uint32_t dspec, void * payload, uint32_t payload_size, uint32_t cdw12, uint32_t cdw13, spdk_nvme_cmd_cb cb_fn, void * cb_arg);
int spdk_nvme_ctrlr_cmd_get_log_page_ext(struct spdk_nvme_ctrlr * ctrlr, uint8_t log_page, uint32_t nsid, void * payload, uint32_t payload_size, uint64_t offset, uint32_t cdw10, uint32_t cdw11, uint32_t cdw14, spdk_nvme_cmd_cb cb_fn, void * cb_arg);
int spdk_nvme_ctrlr_cmd_set_feature_ns(struct spdk_nvme_ctrlr * ctrlr, uint8_t feature, uint32_t cdw11, uint32_t cdw12, void * payload, uint32_t payload_size, spdk_nvme_cmd_cb cb_fn, void * cb_arg, uint32_t ns_id);
int nvme_ctrlr_cmd_identify(struct spdk_nvme_ctrlr * ctrlr, uint8_t cns, uint16_t cntid, uint32_t nsid, uint8_t csi, void * payload, size_t payload_size, spdk_nvme_cmd_cb cb_fn, void * cb_arg);
void spdk_blob_io_readv_ext(struct spdk_blob * blob, struct spdk_io_channel * channel, struct iovec * iov, int iovcnt, uint64_t offset, uint64_t length, spdk_blob_op_complete cb_fn, void * cb_arg, struct spdk_blob_ext_io_opts * io_opts);
void spdk_blob_io_writev_ext(struct spdk_blob * blob, struct spdk_io_channel * channel, struct iovec * iov, int iovcnt, uint64_t offset, uint64_t length, spdk_blob_op_complete cb_fn, void * cb_arg, struct spdk_blob_ext_io_opts * io_opts);
void blob_request_submit_rw_iov(struct spdk_blob * blob, struct spdk_io_channel * _channel, struct iovec * iov, int iovcnt, uint64_t offset, uint64_t length, spdk_blob_op_complete cb_fn, void * cb_arg, _Bool read, struct spdk_blob_ext_io_opts * ext_io_opts);
void bdev_blob_queue_io(struct spdk_bs_dev * dev, struct spdk_io_channel * channel, void * payload, int iovcnt, uint64_t lba, uint64_t src_lba, uint32_t lba_count, enum spdk_bdev_io_type io_type, struct spdk_bs_dev_cb_args * cb_args, struct spdk_blob_ext_io_opts * ext_io_opts);
void __readvwritev(struct spdk_file * file, struct spdk_io_channel * _channel, struct iovec * iovs, uint32_t iovcnt, uint64_t offset, uint64_t length, spdk_file_op_complete cb_fn, void * cb_arg, int is_read);
int bdev_nvme_comparev_and_writev(struct nvme_bdev_io * bio, struct iovec * cmp_iov, int cmp_iovcnt, struct iovec * write_iov, int write_iovcnt, void * md, uint64_t lba_count, uint64_t lba, uint32_t flags);
int bdev_nvme_create(struct spdk_nvme_transport_id * trid, const char  * base_name, const char  * * names, uint32_t count, spdk_bdev_create_nvme_fn cb_fn, void * cb_ctx, struct spdk_nvme_ctrlr_opts * drv_opts, struct nvme_ctrlr_opts * bdev_opts, _Bool multipath);
void bdev_malloc_writev(struct malloc_disk * mdisk, struct spdk_io_channel * ch, struct malloc_task * task, struct iovec * iov, int iovcnt, size_t len, uint64_t offset, void * md_buf, size_t md_len, uint64_t md_offset);
void bdev_malloc_readv(struct malloc_disk * mdisk, struct spdk_io_channel * ch, struct malloc_task * task, struct iovec * iov, int iovcnt, size_t len, uint64_t offset, void * md_buf, size_t md_len, uint64_t md_offset);
